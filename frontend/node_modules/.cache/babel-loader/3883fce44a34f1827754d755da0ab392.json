{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games_Dir\\\\frontend\\\\src\\\\screens\\\\GameScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { listGameDetails, createGameReview } from \"../actions/gameActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { GAME_CREATE_REVIEW_RESET } from \"../constatns/gameConstatns\";\nimport Meta from \"../components/Meta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [minReq, setMinReq] = useState([]);\n  const [recReq, setRecReq] = useState([]);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const gameReviewCreate = useSelector(state => state.gameReviewCreate);\n  const {\n    success: successGameReview,\n    error: errorGameReview\n  } = gameReviewCreate;\n  const gameDetails = useSelector(state => state.gameDetails);\n  const {\n    loading,\n    error,\n    game\n  } = gameDetails;\n  useEffect(() => {\n    if (successGameReview) {\n      alert(\"Review Submitted!\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({\n        type: GAME_CREATE_REVIEW_RESET\n      });\n    }\n\n    if (!loading) {\n      setMinReq(game.minRequirements.toString().split(\"_\"));\n      setRecReq(game.recRequirements.toString().split(\"_\"));\n    }\n\n    dispatch(listGameDetails(match.params.id));\n  }, [dispatch, match, successGameReview, game, loading]);\n\n  const buyNowHandler = () => {\n    if (userInfo) {\n      history.push(`/overview/${match.params.id}`);\n    } else {\n      history.push(`/login?redirect=overview/${game._id}`);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createGameReview(match.params.id, {\n      rating,\n      comment\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-light my-3\",\n      onClick: () => history.goBack(),\n      style: {\n        textDecoration: \"none\"\n      },\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_s(GameScreen, \"OHTQMKam/G9cEcDhFU4xYixijxg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = GameScreen;\nexport default GameScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/GameScreen.jsx"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","listGameDetails","createGameReview","Loader","Message","GAME_CREATE_REVIEW_RESET","Meta","GameScreen","match","history","dispatch","rating","setRating","comment","setComment","minReq","setMinReq","recReq","setRecReq","userLogin","state","userInfo","gameReviewCreate","success","successGameReview","error","errorGameReview","gameDetails","loading","game","alert","type","minRequirements","toString","split","recRequirements","params","id","buyNowHandler","push","_id","submitHandler","e","preventDefault","goBack","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { listGameDetails, createGameReview } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { GAME_CREATE_REVIEW_RESET } from \"../constatns/gameConstatns\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst GameScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [minReq, setMinReq] = useState([]);\r\n  const [recReq, setRecReq] = useState([]);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const gameReviewCreate = useSelector((state) => state.gameReviewCreate);\r\n  const { success: successGameReview, error: errorGameReview } =\r\n    gameReviewCreate;\r\n\r\n  const gameDetails = useSelector((state) => state.gameDetails);\r\n  const { loading, error, game } = gameDetails;\r\n  useEffect(() => {\r\n    if (successGameReview) {\r\n      alert(\"Review Submitted!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: GAME_CREATE_REVIEW_RESET });\r\n    }\r\n    if (!loading) {\r\n      setMinReq(game.minRequirements.toString().split(\"_\"));\r\n      setRecReq(game.recRequirements.toString().split(\"_\"));\r\n    }\r\n    dispatch(listGameDetails(match.params.id));\r\n  }, [dispatch, match, successGameReview, game, loading]);\r\n\r\n  const buyNowHandler = () => {\r\n    if (userInfo) {\r\n      history.push(`/overview/${match.params.id}`);\r\n    } else {\r\n      history.push(`/login?redirect=overview/${game._id}`);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createGameReview(match.params.id, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-light my-3\"\r\n        onClick={() => history.goBack()}\r\n        style={{\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        Go back\r\n      </Button>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          {/* <Meta title={game.title} />\r\n          <Row className=\"justify-content-center my-2\">\r\n            <Col md={8} lg={7} xs={12}>\r\n              <Image\r\n                src={game.image}\r\n                alt={game.title}\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                fluid\r\n              />\r\n            </Col>\r\n            <Col md={4} sm={4} lg={3} xs={12} className=\"mt-2 mt-lg-4 mt-md-0\">\r\n              <Card bg=\"light\">\r\n                <ListGroup style={{ width: \"100%\" }}>\r\n                  <ListGroup.Item\r\n                    style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                  >\r\n                    <Row style={{ textAlign: \"center\" }}>\r\n                      <Col as=\"h5\">Price:</Col>\r\n                      <Col as=\"h5\">\r\n                        <strong>${game.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      as=\"h5\"\r\n                      className=\"mt-3 \"\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      <strong>Status:</strong>\r\n                    </Row>\r\n                    <Row as=\"h4\" style={{ textAlign: \"center\" }}>\r\n                      <strong>\r\n                        {game.numberInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </strong>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Button\r\n                        onClick={buyNowHandler}\r\n                        style={{\r\n                          backgroundColor: \"dodgerblue\",\r\n                          borderColor: \"dodgerblue\",\r\n                        }}\r\n                        type=\"button\"\r\n                        disabled={game.numberInStock === 0}\r\n                      >\r\n                        {game.numberInStock > 0 ? \"Buy now\" : \"Out Of Stock\"}\r\n                      </Button>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"justify-content-center my-lg-3 py-lg-3 my-3 py-3\"\r\n            style={{ borderTop: \"solid\", borderWidth: \"0.5px\" }}\r\n          >\r\n            <h2 className=\"text-center\">Description</h2>\r\n            <Col lg={10}>\r\n              <Card bg=\"light\">\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"solid\",\r\n                      borderWidth: \"0.5px\",\r\n                    }}\r\n                  >\r\n                    <h3>{game.title}</h3>\r\n                    <h5>Publisher: {game.publisher}</h5>\r\n                    <Rating\r\n                      value={game.rating}\r\n                      text={`${game.numReviews} reviews`}\r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item\r\n                    style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                  >\r\n                    <p className=\"px-lg-5\" style={{ whiteSpace: \"pre-line\" }}>\r\n                      {game.description}\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col\r\n                        lg={5}\r\n                        style={{ borderRight: \"solid\", borderWidth: \"0.5px\" }}\r\n                      >\r\n                        <ul>\r\n                          <strong>MINIMUM:</strong>\r\n                          {minReq.map((requirement) => (\r\n                            <li key={requirement}>{requirement}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </Col>\r\n                      <Col lg={5}>\r\n                        <ul>\r\n                          <strong>RECOMMENDED:</strong>\r\n                          {recReq.map((requirement) => (\r\n                            <li key={requirement}>{requirement}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"justify-content-center my-lg-3 py-lg-3 my-3 py-3\"\r\n            style={{ borderTop: \"solid\", borderWidth: \"0.5px\" }}\r\n          >\r\n            <Col lg={6}>\r\n              <h2 className=\"text-center\">Reviews</h2>\r\n              {game.reviews.length === 0 && (\r\n                <Message variant=\"warning\">No Reviews</Message>\r\n              )}\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  {game.reviews.map((review) => (\r\n                    <ListGroup.Item\r\n                      key={review._id}\r\n                      style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                    >\r\n                      <h5>{review.name}</h5>\r\n                      <Rating value={review.rating} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                  <ListGroup.Item>\r\n                    <h2>Write a Review</h2>\r\n                    {errorGameReview && (\r\n                      <Message variant=\"danger\">{errorGameReview}</Message>\r\n                    )}\r\n                    {userInfo ? (\r\n                      <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"rating\" className=\"my-3\">\r\n                          <Form.Label>Rating</Form.Label>\r\n                          <Form.Select\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              color: \"black\",\r\n                              width: \"50%\",\r\n                            }}\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                          >\r\n                            <option value=\"\" style={{ color: \"black\" }}>\r\n                              Select...\r\n                            </option>\r\n                            <option value=\"1\" style={{ color: \"black\" }}>\r\n                              1 - Poor\r\n                            </option>\r\n                            <option value=\"2\" style={{ color: \"black\" }}>\r\n                              2 - Fair\r\n                            </option>\r\n                            <option value=\"3\" style={{ color: \"black\" }}>\r\n                              3 - Good\r\n                            </option>\r\n                            <option value=\"4\" style={{ color: \"black\" }}>\r\n                              4 - Very Good\r\n                            </option>\r\n                            <option value=\"5\" style={{ color: \"black\" }}>\r\n                              5 - Excellent\r\n                            </option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                        <Col>\r\n                          <Form.Group controlId=\"comment\" className=\"my-3\">\r\n                            <Form.Label style={{ color: \"black\" }}>\r\n                              Comment:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                              style={{\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                              }}\r\n                              type=\"text\"\r\n                              placeholder=\"Write a comment...\"\r\n                              value={comment}\r\n                              as=\"textarea\"\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                          Submit\r\n                        </Button>\r\n                      </Form>\r\n                    ) : (\r\n                      <Message>\r\n                        Please{\" \"}\r\n                        <Link\r\n                          to={`/login?redirect=game/${game._id}`}\r\n                          style={{ color: \"black\" }}\r\n                        >\r\n                          Sign in\r\n                        </Link>{\" \"}\r\n                        to write a review\r\n                      </Message>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n"]},"metadata":{},"sourceType":"module"}