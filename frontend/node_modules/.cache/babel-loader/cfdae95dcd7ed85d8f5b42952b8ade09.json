{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games-Dir-api\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constatns/userConstants\";\nimport Meta from \"../components/Meta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user,\n    success\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.replace(\"/admin/userlist\");\n    } else {\n      if (!user.name || user.id !== userId) {\n        dispatch(getUserDetails(userId));\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      } else {\n        console.log(\"Help\");\n      }\n    }\n  }, [user.name, user.email, user.isAdmin, dispatch, userId, successUpdate, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Admin | Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-dark my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center my-lg-3 my-md-3 my-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-2\",\n            style: {\n              backgroundColor: \"indigo\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Edit User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: errorUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 31\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"name\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter username\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"email\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"isAdmin\",\n                  className: \"my-2\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Is Admin\",\n                    checked: isAdmin,\n                    onChange: e => setIsAdmin(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"my-2\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"iYZ+BPBGNn2YcoSA87CaLHv1AJo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games-Dir-api/frontend/src/screens/UserEditScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Container","Card","useDispatch","useSelector","Message","Loader","getUserDetails","updateUser","USER_UPDATE_RESET","Meta","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","success","userUpdate","loadingUpdate","errorUpdate","successUpdate","type","replace","console","log","submitHandler","e","preventDefault","_id","backgroundColor","textAlign","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constatns/userConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user, success } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.replace(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user.id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      } else {\r\n        console.log(\"Help\");\r\n      }\r\n    }\r\n  }, [\r\n    user.name,\r\n    user.email,\r\n    user.isAdmin,\r\n    dispatch,\r\n    userId,\r\n    successUpdate,\r\n    history,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Edit User\" />\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      <Container>\r\n        <Row className=\"justify-content-center my-lg-3 my-md-3 my-4\">\r\n          <Col lg={4} md={6}>\r\n            <Card className=\"p-2\" style={{ backgroundColor: \"indigo\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Edit User</h1>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n              ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"name\" className=\"my-1\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter username\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"email\" className=\"my-1\">\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.Group controlId=\"isAdmin\" className=\"my-2\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"Is Admin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Form.Group style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                      Update\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}