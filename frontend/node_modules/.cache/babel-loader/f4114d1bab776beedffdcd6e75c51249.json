{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { gameDetailsReducer, gameListReducer } from './reducers/gameReducers';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  gameList: gameListReducer,\n  gameDetails: gameDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cart: cartReducer\n});\nconst userInfoFromStorage = sessionStorage.getItem('userInfo') ? JSON.parse(sessionStorage.getItem('userInfo')) : null;\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : {};\nconst autoLogoutFromStorage = sessionStorage.getItem('autoLogout');\nconst initialState = {\n  cart: {\n    cartItem: cartItemFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n    autoLogout: autoLogoutFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games_Dir/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","gameDetailsReducer","gameListReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","cartReducer","reducer","gameList","gameDetails","userLogin","userRegister","userDetails","userUpdateProfile","cart","userInfoFromStorage","sessionStorage","getItem","JSON","parse","cartItemFromStorage","localStorage","autoLogoutFromStorage","initialState","cartItem","userInfo","autoLogout","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,yBAApD;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,wBAApE,QAAoG,yBAApG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,QAAQ,EAAEP,eADkB;AAE5BQ,EAAAA,WAAW,EAAET,kBAFe;AAG5BU,EAAAA,SAAS,EAAEP,gBAHiB;AAI5BQ,EAAAA,YAAY,EAAEP,mBAJc;AAK5BQ,EAAAA,WAAW,EAAEV,kBALe;AAM5BW,EAAAA,iBAAiB,EAAER,wBANS;AAO5BS,EAAAA,IAAI,EAAER;AAPsB,CAAD,CAA/B;AAUA,MAAMS,mBAAmB,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,IACtBC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CADsB,GAEtB,IAFN;AAIA,MAAMG,mBAAmB,GAAGC,YAAY,CAACJ,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWE,YAAY,CAACJ,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,EAA9G;AACA,MAAMK,qBAAqB,GAAGN,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAA9B;AAEA,MAAMM,YAAY,GAAG;AACjBT,EAAAA,IAAI,EAAE;AAAEU,IAAAA,QAAQ,EAAEJ;AAAZ,GADW;AAEjBV,EAAAA,SAAS,EAAE;AAAEe,IAAAA,QAAQ,EAAEV,mBAAZ;AAAiCW,IAAAA,UAAU,EAAEJ;AAA7C;AAFM,CAArB;AAKA,MAAMK,UAAU,GAAG,CAAC7B,KAAD,CAAnB;AAEA,MAAM8B,KAAK,GAAGjC,WAAW,CAACY,OAAD,EAAUgB,YAAV,EAAwBxB,mBAAmB,CAACF,eAAe,CAAC,GAAG8B,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { gameDetailsReducer, gameListReducer } from './reducers/gameReducers'\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nconst reducer = combineReducers({\r\n    gameList: gameListReducer,\r\n    gameDetails: gameDetailsReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    cart: cartReducer,\r\n});\r\n\r\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\r\n    ? JSON.parse(sessionStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : {};\r\nconst autoLogoutFromStorage = sessionStorage.getItem('autoLogout');\r\n\r\nconst initialState = {\r\n    cart: { cartItem: cartItemFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage, autoLogout: autoLogoutFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}