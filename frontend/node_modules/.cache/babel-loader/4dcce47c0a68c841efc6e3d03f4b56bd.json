{"ast":null,"code":"import axios from 'axios';\nimport { GAME_LIST_FAIL, GAME_LIST_SUCCESS, GAME_LIST_REQUEST, GAME_DETAILS_REQUEST, GAME_DETAILS_SUCCESS, GAME_DETAILS_FAIL, GAME_DELETE_REQUEST, GAME_DELETE_SUCCESS, GAME_DELETE_FAIL, GAME_GENRE_REQUEST, GAME_GENRE_SUCCESS, GAME_GENRE_FAIL, GAME_CREATE_REQUEST, GAME_CREATE_SUCCESS, GAME_CREATE_FAIL, GAME_UPDATE_REQUEST, GAME_UPDATE_SUCCESS, GAME_UPDATE_FAIL, GAME_CREATE_REVIEW_REQUEST, GAME_CREATE_REVIEW_SUCCESS, GAME_CREATE_REVIEW_FAIL, GAME_LIST_ADMIN_REQUEST, GAME_LIST_ADMIN_SUCCESS, GAME_LIST_ADMIN_FAIL } from '../constatns/gameConstatns';\nexport const listGamesAdmin = (pageNumber = '') => async (dispatch, userInfo) => {\n  try {\n    dispatch({\n      type: GAME_LIST_ADMIN_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/games/paginate?pageNumber=${pageNumber}`, config);\n    dispatch({\n      type: GAME_LIST_ADMIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_LIST_ADMIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listGames = (keyword = '') => async dispatch => {\n  try {\n    dispatch({\n      type: GAME_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/games?keyword=${keyword}`);\n    dispatch({\n      type: GAME_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listGamesHomePage = () => async dispatch => {\n  try {\n    dispatch({\n      type: GAME_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/games/homepage`);\n    dispatch({\n      type: GAME_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listGameDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: GAME_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/games/${id}`);\n    dispatch({\n      type: GAME_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteGame = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GAME_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/games/${id}`, config);\n    dispatch({\n      type: GAME_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createGame = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GAME_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/games/`, {}, config);\n    dispatch({\n      type: GAME_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getGameGenres = () => async dispatch => {\n  try {\n    dispatch({\n      type: GAME_GENRE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/genres');\n    dispatch({\n      type: GAME_GENRE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_GENRE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateGame = game => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GAME_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/games/${game._id}`, game, config);\n    dispatch({\n      type: GAME_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createGameReview = (gameId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GAME_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/games/${gameId}/reviews`, review, config);\n    dispatch({\n      type: GAME_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: GAME_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games_Dir/frontend/src/actions/gameActions.js"],"names":["axios","GAME_LIST_FAIL","GAME_LIST_SUCCESS","GAME_LIST_REQUEST","GAME_DETAILS_REQUEST","GAME_DETAILS_SUCCESS","GAME_DETAILS_FAIL","GAME_DELETE_REQUEST","GAME_DELETE_SUCCESS","GAME_DELETE_FAIL","GAME_GENRE_REQUEST","GAME_GENRE_SUCCESS","GAME_GENRE_FAIL","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAIL","GAME_UPDATE_REQUEST","GAME_UPDATE_SUCCESS","GAME_UPDATE_FAIL","GAME_CREATE_REVIEW_REQUEST","GAME_CREATE_REVIEW_SUCCESS","GAME_CREATE_REVIEW_FAIL","GAME_LIST_ADMIN_REQUEST","GAME_LIST_ADMIN_SUCCESS","GAME_LIST_ADMIN_FAIL","listGamesAdmin","pageNumber","dispatch","userInfo","type","config","headers","Authorization","token","data","get","payload","error","response","message","listGames","keyword","listGamesHomePage","listGameDetails","id","deleteGame","getState","userLogin","delete","createGame","post","getGameGenres","updateGame","game","put","_id","createGameReview","gameId","review"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { GAME_LIST_FAIL, GAME_LIST_SUCCESS, GAME_LIST_REQUEST, GAME_DETAILS_REQUEST, GAME_DETAILS_SUCCESS, GAME_DETAILS_FAIL, GAME_DELETE_REQUEST, GAME_DELETE_SUCCESS, GAME_DELETE_FAIL, GAME_GENRE_REQUEST, GAME_GENRE_SUCCESS, GAME_GENRE_FAIL, GAME_CREATE_REQUEST, GAME_CREATE_SUCCESS, GAME_CREATE_FAIL, GAME_UPDATE_REQUEST, GAME_UPDATE_SUCCESS, GAME_UPDATE_FAIL, GAME_CREATE_REVIEW_REQUEST, GAME_CREATE_REVIEW_SUCCESS, GAME_CREATE_REVIEW_FAIL, GAME_LIST_ADMIN_REQUEST, GAME_LIST_ADMIN_SUCCESS, GAME_LIST_ADMIN_FAIL } from '../constatns/gameConstatns'\r\n\r\nexport const listGamesAdmin = (pageNumber = '') => async (dispatch, userInfo) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_ADMIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/games/paginate?pageNumber=${pageNumber}`, config);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGames = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games?keyword=${keyword}`);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGamesHomePage = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games/homepage`);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGameDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games/${id}`);\r\n\r\n        dispatch({\r\n            type: GAME_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteGame = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/games/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GAME_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createGame = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/games/`, {}, config);\r\n\r\n        dispatch({\r\n            type: GAME_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getGameGenres = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_GENRE_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/genres');\r\n\r\n        dispatch({\r\n            type: GAME_GENRE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_GENRE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateGame = (game) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_UPDATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/games/${game._id}`, game, config);\r\n\r\n        dispatch({\r\n            type: GAME_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createGameReview = (gameId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/games/${gameId}/reviews`, review, config);\r\n\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}