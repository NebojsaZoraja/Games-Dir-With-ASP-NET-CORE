{"ast":null,"code":"import _slicedToArray from\"C:/Users/Neboj\\u0161a/Desktop/Games_Dir/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{Col,ListGroup,Row}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Game from\"../components/Game\";import{getGameGenres,listGames}from\"../actions/gameActions\";import Loader from\"../components/Loader\";import Carousel from\"react-multi-carousel\";import useDynamicRefs from\"use-dynamic-refs\";import Message from\"../components/Message\";import Meta from\"../components/Meta\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AllGamesScreen=function AllGamesScreen(){var gameList=useSelector(function(state){return state.gameList;});var loading=gameList.loading,error=gameList.error,games=gameList.games;var _useDynamicRefs=useDynamicRefs(),_useDynamicRefs2=_slicedToArray(_useDynamicRefs,2),getRef=_useDynamicRefs2[0],setRef=_useDynamicRefs2[1];var responsive={superLargeDesktop:{breakpoint:{max:4000,min:3000},items:5,slidesToSlide:5},desktop:{breakpoint:{max:3000,min:1024},items:4,slidesToSlide:4},tablet:{breakpoint:{max:1024,min:464},items:2,slidesToSlide:3},mobile:{breakpoint:{max:464,min:0},items:1,slidesToSlide:1}};var gameGenres=useSelector(function(state){return state.gameGenres;});var genres=gameGenres.genres;var dispatch=useDispatch();useEffect(function(){dispatch(listGames(\"\"));dispatch(getGameGenres());},[dispatch]);var scrollToRef=function scrollToRef(ref){window.scrollTo(0,ref.current.offsetTop);};var executeScroll=function executeScroll(ref){return scrollToRef(ref);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Meta,{title:\"Games-Dir | All Games\"}),loading&&/*#__PURE__*/_jsx(Loader,{}),error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error.message}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{className:\"py-lg-4 py-2\",children:/*#__PURE__*/_jsx(ListGroup,{horizontal:\"lg\",children:genres.map(function(genre){return/*#__PURE__*/_jsx(ListGroup.Item,{onClick:function onClick(){return executeScroll(getRef(genre));},style:{cursor:\"pointer\",textAlign:\"center\",fontSize:15,fontWeight:\"bold\"},action:true,variant:\"dark\",children:genre.name},genre._id);})})})}),genres.map(function(genre){return/*#__PURE__*/_jsxs(Row,{style:{borderBottom:\"solid\",borderWidth:\"0.5px\"},className:\"justify-content-center\",ref:setRef(genre),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-center py-2\",children:genre.name}),/*#__PURE__*/_jsx(Carousel,{className:\"w-100\",responsive:responsive,renderButtonGroupOutside:true,infinite:true,children:games.map(function(game){return game.genre._id===genre._id&&/*#__PURE__*/_jsx(Col,{xs:11,children:/*#__PURE__*/_jsx(Game,{game:game})},game._id);})})]},genre._id);}),\" \"]})]});};export default AllGamesScreen;","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/AllGamesScreen.jsx"],"names":["React","useEffect","Col","ListGroup","Row","useDispatch","useSelector","Game","getGameGenres","listGames","Loader","Carousel","useDynamicRefs","Message","Meta","AllGamesScreen","gameList","state","loading","error","games","getRef","setRef","responsive","superLargeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","gameGenres","genres","dispatch","scrollToRef","ref","window","scrollTo","current","offsetTop","executeScroll","message","map","genre","cursor","textAlign","fontSize","fontWeight","name","_id","borderBottom","borderWidth","game"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Game from \"../components/Game\";\r\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport useDynamicRefs from \"use-dynamic-refs\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst AllGamesScreen = () => {\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n  const [getRef, setRef] = useDynamicRefs();\r\n\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5,\r\n      slidesToSlide: 5,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n      slidesToSlide: 4,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 3,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1,\r\n    },\r\n  };\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listGames(\"\"));\r\n    dispatch(getGameGenres());\r\n  }, [dispatch]);\r\n\r\n  const scrollToRef = (ref) => {\r\n    window.scrollTo(0, ref.current.offsetTop);\r\n  };\r\n  const executeScroll = (ref) => scrollToRef(ref);\r\n\r\n  return (\r\n    <div>\r\n      <Meta title=\"Games-Dir | All Games\" />\r\n      {loading && <Loader />}\r\n      {error ? (\r\n        <Message variant=\"danger\">{error.message}</Message>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"py-lg-4 py-2\">\r\n              <ListGroup horizontal=\"lg\">\r\n                {genres.map((genre) => (\r\n                  <ListGroup.Item\r\n                    onClick={() => executeScroll(getRef(genre))}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      textAlign: \"center\",\r\n                      fontSize: 15,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                    key={genre._id}\r\n                    action\r\n                    variant=\"dark\"\r\n                  >\r\n                    {genre.name}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          {genres.map((genre) => (\r\n            <Row\r\n              style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n              className=\"justify-content-center\"\r\n              ref={setRef(genre)}\r\n              key={genre._id}\r\n            >\r\n              <h4 className=\"text-center py-2\">{genre.name}</h4>\r\n              <Carousel\r\n                className=\"w-100\"\r\n                responsive={responsive}\r\n                renderButtonGroupOutside={true}\r\n                infinite={true}\r\n              >\r\n                {games.map(\r\n                  (game) =>\r\n                    game.genre._id === genre._id && (\r\n                      <Col key={game._id} xs={11}>\r\n                        <Game game={game} />\r\n                      </Col>\r\n                    )\r\n                )}\r\n              </Carousel>\r\n            </Row>\r\n          ))}{\" \"}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGamesScreen;\r\n"]},"metadata":{},"sourceType":"module"}