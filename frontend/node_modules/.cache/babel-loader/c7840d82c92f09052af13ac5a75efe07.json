{"ast":null,"code":"import _slicedToArray from\"C:/Users/Neboj\\u0161a/Desktop/Games_Dir/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Form,Button,Row,Col,Card}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{getGenreDetails,updateGenre}from\"../actions/genreActions\";import{GENRE_UPDATE_RESET}from\"../constatns/genreConstants\";import Meta from\"../components/Meta\";import Loader from\"../components/Loader\";import Message from\"../components/Message\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GenreEditScreen=function GenreEditScreen(_ref){var match=_ref.match,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var genreId=match.params.id;var dispatch=useDispatch();var genreDetails=useSelector(function(state){return state.genreDetails;});var genre=genreDetails.genre,loading=genreDetails.loading,error=genreDetails.error;var genreUpdate=useSelector(function(state){return state.genreUpdate;});var loadingUpdate=genreUpdate.loading,errorUpdate=genreUpdate.error,successUpdate=genreUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:GENRE_UPDATE_RESET});history.replace(\"/admin/genreslist\");}else{if(!genre.name||genre._id!==genreId){dispatch(getGenreDetails(genreId));}else{setName(genre.name);}}},[genre,dispatch,genreId,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateGenre({_id:genreId,name:name}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Admin | Add/Edit Genre\"}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center my-lg-5 my-md-5 my-4\",children:/*#__PURE__*/_jsx(Col,{lg:4,md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"p-2\",style:{backgroundColor:\"darkblue\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"center\"},children:\"Add/Edit Genre\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",className:\"my-1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Genre Name:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter genre name..\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{style:{textAlign:\"center\"},children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"my-2\",children:\"Submit\"})})]})]})})})]});};export default GenreEditScreen;","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/GenreEditScreen.jsx"],"names":["React","useEffect","useState","Form","Button","Row","Col","Card","useDispatch","useSelector","getGenreDetails","updateGenre","GENRE_UPDATE_RESET","Meta","Loader","Message","GenreEditScreen","match","history","name","setName","genreId","params","id","dispatch","genreDetails","state","genre","loading","error","genreUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","replace","_id","submitHandler","e","preventDefault","backgroundColor","textAlign","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGenreDetails, updateGenre } from \"../actions/genreActions\";\r\nimport { GENRE_UPDATE_RESET } from \"../constatns/genreConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst GenreEditScreen = ({ match, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const genreId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const genreDetails = useSelector((state) => state.genreDetails);\r\n  const { genre, loading, error } = genreDetails;\r\n\r\n  const genreUpdate = useSelector((state) => state.genreUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = genreUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: GENRE_UPDATE_RESET });\r\n      history.replace(\"/admin/genreslist\");\r\n    } else {\r\n      if (!genre.name || genre._id !== genreId) {\r\n        dispatch(getGenreDetails(genreId));\r\n      } else {\r\n        setName(genre.name);\r\n      }\r\n    }\r\n  }, [genre, dispatch, genreId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateGenre({ _id: genreId, name }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Add/Edit Genre\" />\r\n      <Row className=\"justify-content-center my-lg-5 my-md-5 my-4\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\" style={{ backgroundColor: \"darkblue\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Add/Edit Genre</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\" className=\"my-1\">\r\n                  <Form.Label>Genre Name:</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter genre name..\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group style={{ textAlign: \"center\" }}>\r\n                  <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenreEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}