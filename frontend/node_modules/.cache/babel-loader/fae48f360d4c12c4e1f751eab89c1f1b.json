{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games_Dir\\\\frontend\\\\src\\\\screens\\\\GameEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getGameGenres, listGameDetails, updateGame } from \"../actions/gameActions\";\nimport { GAME_GENRE_RESET, GAME_UPDATE_RESET } from \"../constatns/gameConstatns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const gameId = match.params.id;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [publisher, setPublisher] = useState(\"\");\n  const [numberInStock, setNumberInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [minRequirements, setMinRequirements] = useState(\"\");\n  const [recRequirements, setRecRequirements] = useState(\"\");\n  const dispatch = useDispatch();\n  const gameDetails = useSelector(state => state.gameDetails);\n  const {\n    loading,\n    error,\n    game\n  } = gameDetails;\n  const gameUpdate = useSelector(state => state.gameUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = gameUpdate;\n  const gameGenres = useSelector(state => state.gameGenres);\n  const {\n    genres\n  } = gameGenres;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: GAME_UPDATE_RESET\n      });\n      dispatch({\n        type: GAME_GENRE_RESET\n      });\n      history.push(\"/admin/gamelist\");\n    } else {\n      if (!game.title || game._id !== gameId) {\n        dispatch(getGameGenres());\n        dispatch(listGameDetails(gameId));\n      } else {\n        setTitle(game.title);\n        setPrice(game.price);\n        setGenre(game.genre);\n        setImage(game.image);\n        setPublisher(game.publisher);\n        setNumberInStock(game.numberInStock);\n        setDescription(game.description);\n        setMinRequirements(game.minRequirements);\n        setRecRequirements(game.recRequirements);\n      }\n    }\n  }, [game, dispatch, gameId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateGame({\n      _id: gameId,\n      genre: genre._id,\n      title,\n      price,\n      publisher,\n      image,\n      numberInStock,\n      description,\n      minRequirements,\n      recRequirements\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/gamelist\",\n      className: \"btn btn-dark my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center my-lg-3 my-md-3 my-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-2\",\n            style: {\n              backgroundColor: \"indigo\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Edit Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: errorUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 31\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"title\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Title...\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"publisher\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Publisher:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Publisher...\",\n                  value: publisher,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"genre\",\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Genre:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  label: genre.name,\n                  onChange: e => setGenre(e.target.value),\n                  children: genres.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: g._id,\n                    children: g.name\n                  }, g._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"price\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Price...\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"numberInStock\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Stock:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Stock...\",\n                  value: numberInStock,\n                  onChange: e => setNumberInStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"description\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  type: \"text\",\n                  placeholder: \"Description...\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"minRequiremens\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Minimum Requirements:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  type: \"text\",\n                  placeholder: \"Minimum Requirements...\",\n                  value: minRequirements,\n                  onChange: e => setMinRequirements(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"recRequiremens\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Recommended Requirements:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  type: \"text\",\n                  placeholder: \"Recommended Requirements...\",\n                  value: recRequirements,\n                  onChange: e => setRecRequirements(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"image\",\n                className: \"my-1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Image:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Image...\",\n                  value: image,\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"my-2\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GameEditScreen, \"AcCagVGNNiuBOLg2rsONzrcRGC4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = GameEditScreen;\nexport default GameEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameEditScreen\");","map":{"version":3,"sources":["C:/Users/Nebojša/Desktop/Games_Dir/frontend/src/screens/GameEditScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Container","Card","useDispatch","useSelector","Message","Loader","getGameGenres","listGameDetails","updateGame","GAME_GENRE_RESET","GAME_UPDATE_RESET","GameEditScreen","match","history","gameId","params","id","title","setTitle","price","setPrice","image","setImage","genre","setGenre","publisher","setPublisher","numberInStock","setNumberInStock","description","setDescription","minRequirements","setMinRequirements","recRequirements","setRecRequirements","dispatch","gameDetails","state","loading","error","game","gameUpdate","loadingUpdate","errorUpdate","success","successUpdate","gameGenres","genres","type","push","_id","submitHandler","e","preventDefault","backgroundColor","textAlign","target","value","name","map","g"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getGameGenres,\r\n  listGameDetails,\r\n  updateGame,\r\n} from \"../actions/gameActions\";\r\nimport {\r\n  GAME_GENRE_RESET,\r\n  GAME_UPDATE_RESET,\r\n} from \"../constatns/gameConstatns\";\r\n\r\nconst GameEditScreen = ({ match, history }) => {\r\n  const gameId = match.params.id;\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [publisher, setPublisher] = useState(\"\");\r\n  const [numberInStock, setNumberInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [minRequirements, setMinRequirements] = useState(\"\");\r\n  const [recRequirements, setRecRequirements] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const gameDetails = useSelector((state) => state.gameDetails);\r\n  const { loading, error, game } = gameDetails;\r\n\r\n  const gameUpdate = useSelector((state) => state.gameUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = gameUpdate;\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: GAME_UPDATE_RESET });\r\n      dispatch({ type: GAME_GENRE_RESET });\r\n      history.push(\"/admin/gamelist\");\r\n    } else {\r\n      if (!game.title || game._id !== gameId) {\r\n        dispatch(getGameGenres());\r\n        dispatch(listGameDetails(gameId));\r\n      } else {\r\n        setTitle(game.title);\r\n        setPrice(game.price);\r\n        setGenre(game.genre);\r\n        setImage(game.image);\r\n        setPublisher(game.publisher);\r\n        setNumberInStock(game.numberInStock);\r\n        setDescription(game.description);\r\n        setMinRequirements(game.minRequirements);\r\n        setRecRequirements(game.recRequirements);\r\n      }\r\n    }\r\n  }, [game, dispatch, gameId, history, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateGame({\r\n        _id: gameId,\r\n        genre: genre._id,\r\n        title,\r\n        price,\r\n        publisher,\r\n        image,\r\n        numberInStock,\r\n        description,\r\n        minRequirements,\r\n        recRequirements,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/gamelist\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      <Container>\r\n        <Row className=\"justify-content-center my-lg-3 my-md-3 my-4\">\r\n          <Col lg={4} md={6}>\r\n            <Card className=\"p-2\" style={{ backgroundColor: \"indigo\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Edit Game</h1>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n              ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"title\" className=\"my-1\">\r\n                    <Form.Label>Title:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Title...\"\r\n                      value={title}\r\n                      onChange={(e) => setTitle(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"publisher\" className=\"my-1\">\r\n                    <Form.Label>Publisher:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Publisher...\"\r\n                      value={publisher}\r\n                      onChange={(e) => setTitle(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"genre\" className=\"my-2\">\r\n                    <Form.Label>Genre:</Form.Label>\r\n                    <Form.Select\r\n                      label={genre.name}\r\n                      onChange={(e) => setGenre(e.target.value)}\r\n                    >\r\n                      {genres.map((g) => (\r\n                        <option key={g._id} value={g._id}>\r\n                          {g.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"price\" className=\"my-1\">\r\n                    <Form.Label>Price:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Price...\"\r\n                      value={price}\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"numberInStock\" className=\"my-1\">\r\n                    <Form.Label>Stock:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Stock...\"\r\n                      value={numberInStock}\r\n                      onChange={(e) => setNumberInStock(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"description\" className=\"my-1\">\r\n                    <Form.Label>Description:</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      type=\"text\"\r\n                      placeholder=\"Description...\"\r\n                      value={description}\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"minRequiremens\" className=\"my-1\">\r\n                    <Form.Label>Minimum Requirements:</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      type=\"text\"\r\n                      placeholder=\"Minimum Requirements...\"\r\n                      value={minRequirements}\r\n                      onChange={(e) => setMinRequirements(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"recRequiremens\" className=\"my-1\">\r\n                    <Form.Label>Recommended Requirements:</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      type=\"text\"\r\n                      placeholder=\"Recommended Requirements...\"\r\n                      value={recRequirements}\r\n                      onChange={(e) => setRecRequirements(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"image\" className=\"my-1\">\r\n                    <Form.Label>Image:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Image...\"\r\n                      value={image}\r\n                      onChange={(e) => setImage(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                      Update\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}