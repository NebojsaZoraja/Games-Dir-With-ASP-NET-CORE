{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games-Dir-api\\\\frontend\\\\src\\\\screens\\\\GenreEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGenreDetails, updateGenre } from \"../actions/genreActions\";\nimport { GENRE_UPDATE_RESET } from \"../constatns/genreConstants\";\nimport Meta from \"../components/Meta\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GenreEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const genreId = match.params.id;\n  const dispatch = useDispatch();\n  const genreDetails = useSelector(state => state.genreDetails);\n  const {\n    genre,\n    loading,\n    error\n  } = genreDetails;\n  const genreUpdate = useSelector(state => state.genreUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = genreUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: GENRE_UPDATE_RESET\n      });\n      history.replace(\"/admin/genreslist\");\n    } else {\n      dispatch(getGenreDetails(genreId));\n      setName(genre.name);\n    }\n  }, [dispatch, genreId, successUpdate, history, genre.name]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateGenre({\n      _id: genreId,\n      name\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Admin | Add/Edit Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center my-lg-5 my-md-5 my-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"p-2\",\n          style: {\n            backgroundColor: \"darkblue\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Add/Edit Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 31\n          }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Genre Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter genre name..\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                className: \"my-2\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GenreEditScreen, \"vfsHaFnkh6YVySObMJg7s7cJc5A=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GenreEditScreen;\nexport default GenreEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreEditScreen\");","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games-Dir-api/frontend/src/screens/GenreEditScreen.jsx"],"names":["React","useEffect","useState","Form","Button","Row","Col","Card","useDispatch","useSelector","getGenreDetails","updateGenre","GENRE_UPDATE_RESET","Meta","Loader","Message","GenreEditScreen","match","history","name","setName","genreId","params","id","dispatch","genreDetails","state","genre","loading","error","genreUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","replace","submitHandler","e","preventDefault","_id","backgroundColor","textAlign","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGenreDetails, updateGenre } from \"../actions/genreActions\";\r\nimport { GENRE_UPDATE_RESET } from \"../constatns/genreConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst GenreEditScreen = ({ match, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const genreId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const genreDetails = useSelector((state) => state.genreDetails);\r\n  const { genre, loading, error } = genreDetails;\r\n\r\n  const genreUpdate = useSelector((state) => state.genreUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = genreUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: GENRE_UPDATE_RESET });\r\n      history.replace(\"/admin/genreslist\");\r\n    } else {\r\n      dispatch(getGenreDetails(genreId));\r\n      setName(genre.name);\r\n    }\r\n  }, [dispatch, genreId, successUpdate, history, genre.name]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateGenre({ _id: genreId, name }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Add/Edit Genre\" />\r\n      <Row className=\"justify-content-center my-lg-5 my-md-5 my-4\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\" style={{ backgroundColor: \"darkblue\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Add/Edit Genre</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\" className=\"my-1\">\r\n                  <Form.Label>Genre Name:</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter genre name..\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group style={{ textAlign: \"center\" }}>\r\n                  <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenreEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}