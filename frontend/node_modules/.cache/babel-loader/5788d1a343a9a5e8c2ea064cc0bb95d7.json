{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games_Dir\\\\frontend\\\\src\\\\screens\\\\AllGamesScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Game from \"../components/Game\";\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllGamesScreen = () => {\n  _s();\n\n  const gameList = useSelector(state => state.gameList);\n  const {\n    loading,\n    error,\n    games\n  } = gameList;\n  const gameGenres = useSelector(state => state.gameGenres);\n  const {\n    genres\n  } = gameGenres;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listGames(\"\"));\n    dispatch(getGameGenres());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 3,\n        style: {\n          marginRight: \"5%\",\n          paddingTop: \"10%\",\n          paddingRight: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            style: {\n              cursor: \"pointer\"\n            },\n            action: true,\n            variant: \"warning\",\n            children: genre.name\n          }, genre._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            borderBottom: \"solid\",\n            borderWidth: \"0.5px\"\n          },\n          className: \"justify-content-center\",\n          children: games.map(game => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Game, {\n              game: game\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, game._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            borderBottom: \"solid\",\n            borderWidth: \"0.5px\"\n          },\n          children: games.map(game => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Game, {\n              game: game\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            borderBottom: \"solid\",\n            borderWidth: \"0.5px\"\n          },\n          children: games.map(game => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Game, {\n              game: game\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllGamesScreen, \"AcWf/NEJSm+UncftCO5jbSYVVhA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AllGamesScreen;\nexport default AllGamesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGamesScreen\");","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/AllGamesScreen.jsx"],"names":["React","useEffect","Card","Col","ListGroup","Row","useDispatch","useSelector","Game","getGameGenres","listGames","Loader","AllGamesScreen","gameList","state","loading","error","games","gameGenres","genres","dispatch","marginRight","paddingTop","paddingRight","map","genre","cursor","name","_id","borderBottom","borderWidth","game"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Game from \"../components/Game\";\r\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst AllGamesScreen = () => {\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listGames(\"\"));\r\n    dispatch(getGameGenres());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          lg={3}\r\n          style={{\r\n            marginRight: \"5%\",\r\n            paddingTop: \"10%\",\r\n            paddingRight: \"5%\",\r\n          }}\r\n        >\r\n          <ListGroup>\r\n            {genres.map((genre) => (\r\n              <ListGroup.Item\r\n                style={{ cursor: \"pointer\" }}\r\n                key={genre._id}\r\n                action\r\n                variant=\"warning\"\r\n              >\r\n                {genre.name}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n        {loading && <Loader />}\r\n        <Col>\r\n          <Row\r\n            style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n            className=\"justify-content-center\"\r\n          >\r\n            {games.map((game) => (\r\n              <Col lg={4} key={game._id}>\r\n                <Game game={game} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}>\r\n            {games.map((game) => (\r\n              <Col lg={4}>\r\n                <Game game={game} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}>\r\n            {games.map((game) => (\r\n              <Col lg={4}>\r\n                <Game game={game} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGamesScreen;\r\n"]},"metadata":{},"sourceType":"module"}