{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { gameDetailsReducer, gameListReducer } from './reducers/gameReducers';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  gameList: gameListReducer,\n  gameDetails: gameDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst userInfoFromStorage = sessionStorage.getItem('userInfo') ? JSON.parse(sessionStorage.getItem('userInfo')) : null;\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : {};\nconst initialState = {\n  cart: {\n    cartItem: cartItemFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games_Dir/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","gameDetailsReducer","gameListReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","gameList","gameDetails","userLogin","userRegister","userDetails","userUpdateProfile","cart","orderCreate","orderDetails","orderPay","orderListMy","userInfoFromStorage","sessionStorage","getItem","JSON","parse","cartItemFromStorage","localStorage","initialState","cartItem","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,yBAApD;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,wBAApE,QAAoG,yBAApG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,eAAtE,QAA6F,0BAA7F;AAEA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC5BgB,EAAAA,QAAQ,EAAEX,eADkB;AAE5BY,EAAAA,WAAW,EAAEb,kBAFe;AAG5Bc,EAAAA,SAAS,EAAEX,gBAHiB;AAI5BY,EAAAA,YAAY,EAAEX,mBAJc;AAK5BY,EAAAA,WAAW,EAAEd,kBALe;AAM5Be,EAAAA,iBAAiB,EAAEZ,wBANS;AAO5Ba,EAAAA,IAAI,EAAEZ,WAPsB;AAQ5Ba,EAAAA,WAAW,EAAEZ,kBARe;AAS5Ba,EAAAA,YAAY,EAAEZ,mBATc;AAU5Ba,EAAAA,QAAQ,EAAEX,eAVkB;AAW5BY,EAAAA,WAAW,EAAEb;AAXe,CAAD,CAA/B;AAcA,MAAMc,mBAAmB,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,IACtBC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CADsB,GAEtB,IAFN;AAIA,MAAMG,mBAAmB,GAAGC,YAAY,CAACJ,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWE,YAAY,CAACJ,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,EAA9G;AAEA,MAAMK,YAAY,GAAG;AACjBZ,EAAAA,IAAI,EAAE;AAAEa,IAAAA,QAAQ,EAAEH;AAAZ,GADW;AAEjBd,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAET;AAAZ;AAFM,CAArB;AAKA,MAAMU,UAAU,GAAG,CAACnC,KAAD,CAAnB;AAEA,MAAMoC,KAAK,GAAGvC,WAAW,CAACgB,OAAD,EAAUmB,YAAV,EAAwB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGoC,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { gameDetailsReducer, gameListReducer } from './reducers/gameReducers'\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    gameList: gameListReducer,\r\n    gameDetails: gameDetailsReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    cart: cartReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer\r\n});\r\n\r\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\r\n    ? JSON.parse(sessionStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : {};\r\n\r\nconst initialState = {\r\n    cart: { cartItem: cartItemFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}