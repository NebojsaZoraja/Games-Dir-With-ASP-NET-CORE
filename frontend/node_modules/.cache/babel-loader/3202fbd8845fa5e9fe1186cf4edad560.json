{"ast":null,"code":"import _slicedToArray from\"C:/Users/Neboj\\u0161a/Desktop/Games_Dir/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Form,Button,Col,Card,Row,Container}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import CheckoutSteps from\"../components/CheckoutSteps\";import{savePaymentMethod}from\"../actions/cartActions\";import Meta from\"../components/Meta\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history,match=_ref.match;var gameId=match.params.id;var cart=useSelector(function(state){return state.cart;});var _useState=useState(\"PayPal\"),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push(\"/placeorder/\".concat(gameId));};useEffect(function(){if(!cartItem.game){history.replace(\"/empty\");}});var cartItem=cart.cartItem;return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Choose Payment\"}),/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{lg:7,xs:15,children:/*#__PURE__*/_jsxs(Card,{bg:\"light\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"pt-3\",style:{color:\"black\",textAlign:\"center\"},children:\"Payment method\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(Form.Label,{className:\"py-1\",as:\"legend\",style:{color:\"black\"},children:\"Select payment method:\"})}),/*#__PURE__*/_jsx(Row,{className:\"py-1\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{style:{color:\"black\"},type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.taget.value);}})})}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center mt-4\",children:/*#__PURE__*/_jsx(Col,{style:{textAlign:\"center\"},children:/*#__PURE__*/_jsx(Button,{type:\"submit\",style:{backgroundColor:\"dodgerblue\",borderColor:\"dodgerblue\"},children:\"Continue\"})})})]})})]})})})]});};export default PaymentScreen;","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/PaymentScreen.jsx"],"names":["React","useEffect","useState","Form","Button","Col","Card","Row","Container","useDispatch","useSelector","CheckoutSteps","savePaymentMethod","Meta","PaymentScreen","history","match","gameId","params","id","cart","state","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","push","cartItem","game","replace","color","textAlign","taget","value","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Col, Card, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst PaymentScreen = ({ history, match }) => {\r\n  const gameId = match.params.id;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(`/placeorder/${gameId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cartItem.game) {\r\n      history.replace(\"/empty\");\r\n    }\r\n  });\r\n\r\n  const { cartItem } = cart;\r\n  return (\r\n    <Container>\r\n      <Meta title=\"Choose Payment\" />\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg={7} xs={15}>\r\n          <Card bg=\"light\">\r\n            <h2\r\n              className=\"pt-3\"\r\n              style={{ color: \"black\", textAlign: \"center\" }}\r\n            >\r\n              Payment method\r\n            </h2>\r\n            <Card.Body>\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                  <Form.Label\r\n                    className=\"py-1\"\r\n                    as=\"legend\"\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    Select payment method:\r\n                  </Form.Label>\r\n                </Form.Group>\r\n                <Row className=\"py-1\">\r\n                  <Col>\r\n                    <Form.Check\r\n                      style={{ color: \"black\" }}\r\n                      type=\"radio\"\r\n                      label=\"PayPal or Credit Card\"\r\n                      id=\"PayPal\"\r\n                      name=\"paymentMethod\"\r\n                      value=\"PayPal\"\r\n                      checked\r\n                      onChange={(e) => setPaymentMethod(e.taget.value)}\r\n                    ></Form.Check>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-center mt-4\">\r\n                  <Col style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      style={{\r\n                        backgroundColor: \"dodgerblue\",\r\n                        borderColor: \"dodgerblue\",\r\n                      }}\r\n                    >\r\n                      Continue\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n"]},"metadata":{},"sourceType":"module"}