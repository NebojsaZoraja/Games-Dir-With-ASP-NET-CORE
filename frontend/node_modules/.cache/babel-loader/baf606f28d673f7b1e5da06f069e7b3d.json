{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games_Dir\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center my-lg-3 my-md-3 my-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter username\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                className: \"my-2\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"py-2\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                textAlign: \"center\"\n              },\n              children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: redirect ? `/login?redirect=${redirect}` : \"/login\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"LvQ3n/fuB4knTzEuQZel+oE7WXQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/Neboj≈°a/Desktop/Games_Dir/frontend/src/screens/RegisterScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Container","Card","useDispatch","useSelector","Message","Loader","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","redirect","search","split","dispatch","userRegister","state","loading","error","userInfo","push","submitHandler","e","preventDefault","textAlign","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center my-lg-3 my-md-3 my-3\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\">\r\n            <h1 style={{ textAlign: \"center\" }}>Register</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\" className=\"my-1\">\r\n                <Form.Label>Username:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\" className=\"my-1\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\" className=\"my-1\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\" className=\"my-1\">\r\n                <Form.Label>Confirm Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group style={{ textAlign: \"center\" }}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                  Register\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Row className=\"py-2\">\r\n              <Col style={{ textAlign: \"center\" }}>\r\n                Already have an account?{\" \"}\r\n                <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n                  Sign In\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}