{"ast":null,"code":"import { GENRE_CREATE_FAIL, GENRE_CREATE_REQUEST, GENRE_CREATE_SUCCESS, GENRE_LIST_FAIL, GENRE_LIST_REQUEST, GENRE_LIST_RESET, GENRE_LIST_SUCCESS, GENRE_UPDATE_FAIL, GENRE_UPDATE_REQUEST, GENRE_UPDATE_SUCCESS } from \"../constatns/genreConstants\";\nexport const genresListReducer = (state = {\n  genres: []\n}, action) => {\n  switch (action.type) {\n    case GENRE_LIST_REQUEST:\n      return {\n        loading: true,\n        genres: []\n      };\n\n    case GENRE_LIST_SUCCESS:\n      return {\n        loading: false,\n        genres: action.payload\n      };\n\n    case GENRE_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case GENRE_LIST_RESET:\n      return {\n        genres: []\n      };\n\n    default:\n      return state;\n  }\n};\nexport const genreCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case GENRE_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case GENRE_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        genre: action.payload\n      };\n\n    case GENRE_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case GENRE_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const genreUpdateReducer = (state = {\n  genre: {}\n}, action) => {\n  switch (action.type) {\n    case GENRE_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case GENRE_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        genre: action.payload\n      };\n\n    case GENRE_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case GENRE_UPDATE_RESET:\n      return {\n        genre: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/reducers/genreReducers.js"],"names":["GENRE_CREATE_FAIL","GENRE_CREATE_REQUEST","GENRE_CREATE_SUCCESS","GENRE_LIST_FAIL","GENRE_LIST_REQUEST","GENRE_LIST_RESET","GENRE_LIST_SUCCESS","GENRE_UPDATE_FAIL","GENRE_UPDATE_REQUEST","GENRE_UPDATE_SUCCESS","genresListReducer","state","genres","action","type","loading","payload","error","genreCreateReducer","success","genre","GENRE_CREATE_RESET","genreUpdateReducer","GENRE_UPDATE_RESET"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAwEC,eAAxE,EAAyFC,kBAAzF,EAA6GC,gBAA7G,EAA+HC,kBAA/H,EAAmJC,iBAAnJ,EAAsKC,oBAAtK,EAA4LC,oBAA5L,QAAwN,6BAAxN;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAT,EAAyBC,MAAzB,KAAoC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,kBAAL;AACI,aAAO;AAAEW,QAAAA,OAAO,EAAE,IAAX;AAAiBH,QAAAA,MAAM,EAAE;AAAzB,OAAP;;AACJ,SAAKN,kBAAL;AACI,aAAO;AAAES,QAAAA,OAAO,EAAE,KAAX;AAAkBH,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAAjC,OAAP;;AACJ,SAAKb,eAAL;AACI,aAAO;AAAEY,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAAhC,OAAP;;AACJ,SAAKX,gBAAL;AACI,aAAO;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAP;;AACJ;AACI,aAAOD,KAAP;AAVR;AAYH,CAbM;AAeP,OAAO,MAAMO,kBAAkB,GAAG,CAACP,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,oBAAL;AACI,aAAO;AAAEc,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACJ,SAAKb,oBAAL;AACI,aAAO;AAAEa,QAAAA,OAAO,EAAE,KAAX;AAAkBI,QAAAA,OAAO,EAAE,IAA3B;AAAiCC,QAAAA,KAAK,EAAEP,MAAM,CAACG;AAA/C,OAAP;;AACJ,SAAKhB,iBAAL;AACI,aAAO;AAAEe,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAAhC,OAAP;;AACJ,SAAKK,kBAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOV,KAAP;AAVR;AAYH,CAbM;AAeP,OAAO,MAAMW,kBAAkB,GAAG,CAACX,KAAK,GAAG;AAAES,EAAAA,KAAK,EAAE;AAAT,CAAT,EAAwBP,MAAxB,KAAmC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,oBAAL;AACI,aAAO;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACJ,SAAKN,oBAAL;AACI,aAAO;AAAEM,QAAAA,OAAO,EAAE,KAAX;AAAkBI,QAAAA,OAAO,EAAE,IAA3B;AAAiCC,QAAAA,KAAK,EAAEP,MAAM,CAACG;AAA/C,OAAP;;AACJ,SAAKT,iBAAL;AACI,aAAO;AAAEQ,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAAhC,OAAP;;AACJ,SAAKO,kBAAL;AACI,aAAO;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACJ;AACI,aAAOT,KAAP;AAVR;AAYH,CAbM","sourcesContent":["import { GENRE_CREATE_FAIL, GENRE_CREATE_REQUEST, GENRE_CREATE_SUCCESS, GENRE_LIST_FAIL, GENRE_LIST_REQUEST, GENRE_LIST_RESET, GENRE_LIST_SUCCESS, GENRE_UPDATE_FAIL, GENRE_UPDATE_REQUEST, GENRE_UPDATE_SUCCESS } from \"../constatns/genreConstants\"\r\n\r\nexport const genresListReducer = (state = { genres: [] }, action) => {\r\n    switch (action.type) {\r\n        case GENRE_LIST_REQUEST:\r\n            return { loading: true, genres: [] }\r\n        case GENRE_LIST_SUCCESS:\r\n            return { loading: false, genres: action.payload }\r\n        case GENRE_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_LIST_RESET:\r\n            return { genres: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GENRE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case GENRE_CREATE_SUCCESS:\r\n            return { loading: false, success: true, genre: action.payload }\r\n        case GENRE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreUpdateReducer = (state = { genre: {} }, action) => {\r\n    switch (action.type) {\r\n        case GENRE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case GENRE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, genre: action.payload }\r\n        case GENRE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_UPDATE_RESET:\r\n            return { genre: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}