{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neboj\\u0161a\\\\Desktop\\\\Games_Dir\\\\frontend\\\\src\\\\screens\\\\AllGamesScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Game from \"../components/Game\";\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllGamesScreen = () => {\n  _s();\n\n  const gameList = useSelector(state => state.gameList);\n  const {\n    loading,\n    error,\n    games\n  } = gameList;\n  const myRef = useRef(null);\n  const gameGenres = useSelector(state => state.gameGenres);\n  const {\n    genres\n  } = gameGenres;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listGames(\"\"));\n    dispatch(getGameGenres());\n  }, [dispatch]);\n\n  const scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop);\n\n  const executeScroll = ref => scrollToRef(ref);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 3,\n        className: \"py-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          horizontal: true,\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: () => executeScroll(genre.name),\n            style: {\n              cursor: \"pointer\"\n            },\n            action: true,\n            variant: \"dark\",\n            children: genre.name\n          }, genre._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            borderBottom: \"solid\",\n            borderWidth: \"0.5px\"\n          },\n          className: \"justify-content-center\",\n          ref: genre.name,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: genre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), games.map(game => game.genre._id === genre._id && /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(Game, {\n              game: game\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this)\n          }, game._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllGamesScreen, \"s2IwU+AwkaKWuTMMS28i50DDlP8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AllGamesScreen;\nexport default AllGamesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGamesScreen\");","map":{"version":3,"sources":["C:/Users/NebojÅ¡a/Desktop/Games_Dir/frontend/src/screens/AllGamesScreen.jsx"],"names":["React","useEffect","useRef","Card","Col","ListGroup","Row","useDispatch","useSelector","Game","getGameGenres","listGames","Loader","AllGamesScreen","gameList","state","loading","error","games","myRef","gameGenres","genres","dispatch","scrollToRef","ref","window","scrollTo","current","offsetTop","executeScroll","map","genre","name","cursor","_id","borderBottom","borderWidth","game"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Game from \"../components/Game\";\r\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst AllGamesScreen = () => {\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n  const myRef = useRef(null);\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listGames(\"\"));\r\n    dispatch(getGameGenres());\r\n  }, [dispatch]);\r\n\r\n  const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n  const executeScroll = (ref) => scrollToRef(ref);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col lg={3} className=\"py-lg-4\">\r\n          <ListGroup horizontal>\r\n            {genres.map((genre) => (\r\n              <ListGroup.Item\r\n                onClick={() => executeScroll(genre.name)}\r\n                style={{ cursor: \"pointer\" }}\r\n                key={genre._id}\r\n                action\r\n                variant=\"dark\"\r\n              >\r\n                {genre.name}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n      {loading && <Loader />}\r\n      <Row>\r\n        <Col>\r\n          {genres.map((genre) => (\r\n            <Row\r\n              style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n              className=\"justify-content-center\"\r\n              ref={genre.name}\r\n            >\r\n              <h4>{genre.name}</h4>\r\n              {games.map(\r\n                (game) =>\r\n                  game.genre._id === genre._id && (\r\n                    <Col lg={3} key={game._id}>\r\n                      <Game game={game} />\r\n                    </Col>\r\n                  )\r\n              )}\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGamesScreen;\r\n"]},"metadata":{},"sourceType":"module"}